@function strip-units($value) {
  @return $value / ($value * 0 + 1);
}

@mixin appearance-button($focus: true) {
  appearance: none;
  margin: 0;
  padding: 0.3em 0.75em;
  border: solid 1px rgba(black, 0.1);
  border-radius: 3px;
  background-color: white;
  background-clip: padding-box;
  box-sizing: border-box;
  transition: ease 0.1s box-shadow;

  @if $focus {
    &:focus {
      box-shadow: 0 0 0 3px rgba(black, 0.2);
    }
  }

  &:active {
    background-color: rgba(mix(black, white, 15%), 0.5);
  }
}

@mixin appearance-text {
  appearance: none;
  margin: 0;
  padding: 0.3em;
  border: solid 1px rgba(black, 0.1);
  border-radius: 1px;
  color: black;
  background-color: white;
  background-clip: padding-box;
  box-sizing: border-box;
  transition: ease 0.1s box-shadow;

  &:focus {
    box-shadow: 0 0 0 3px rgba(black, 0.2);
  }
}

@mixin appearance-toggle {
  appearance: none;
  position: relative;
  margin: 0.2em;
  margin-left: 0;
  padding: 0;
  border: solid 1px rgba(black, 0.1);
  border-radius: 3px;
  background-color: rgba(black, 0.05);
  box-sizing: border-box;
  transition:
    ease 0.1s background,
    ease 0.1s box-shadow;

  &:after {
    position: absolute;
    content: '';
    display: block;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    opacity: 0;
    transform: scale(0);
    transition:
      ease 0.1s opacity,
      ease 0.1s transform;
  }

  &:active {
    background-color: rgba(black, 0.2);
    box-shadow: inset 0 0 0 2px rgba(black, 0.2);
  }

  &:checked {
    background-color: rgba(black, 0.4);

    &:after {
      opacity: 1;
      transform: scale(1);
    }

    &:active {
      background-color: rgba(black, 0.5);
    }
  }

  &:before {
    content: '\200c';  // For baseline alignment
  }
}

@mixin background-svg($data, $width, $height, $color: black, $align: center) {
  background-image: url('data:image/svg+xml;charset=UTF-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 #{strip-units($width)} #{strip-units($height)}"><style>path{fill:#{$color};}</style>#{$data}</svg>');
  background-position: $align;
  background-repeat: no-repeat;
  background-size: $width $height;
}

.inspector {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  width: 320px;
  padding: 1em 0.5em;
  color: black;
  background-color: rgba(mix(black, white, 2.5%), 0.85);
  box-shadow: -1px 0 0 rgba(black, 0.15);
  box-sizing: border-box;
  user-select: none;
  backdrop-filter: blur(32px) saturate(150%);

  &, * {
    font-family: "-apple-system", "BlinkMacSystemFont", sans-serif;
    font-size: 11px;
    line-height: 1.5;
  }
}

.inspector > table {
  width: 100%;
  table-layout: fixed;

  & > tbody > tr > th,
  & > tbody > tr > td {
    padding: 0.3em 0.5em;
    vertical-align: baseline;
  }

  & > tbody > tr > th {
    width: 80px;
    overflow: hidden;
    font-weight: inherit;
    text-align: right;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
}

.inspector {
  *:focus {
    outline: none !important;
  }

  hr {
    height: 1px;
    margin-left: -0.5em;
    margin-right: -0.5em;
    border: none;
    background-color: rgba(black, 0.15);
  }

  label {
    display: block;
  }

  input[type="text"],
  input[type="number"] {
    @include appearance-text;
    width: 100%;
  }

  select {
    @include appearance-button;
    @include background-svg('<path d="M10.646 6.854L7.999 4.207 5.353 6.854l-.707-.708 3.353-3.353 3.354 3.353M7.999 13.207L4.646 9.854l.707-.708 2.646 2.647 2.647-2.647.707.70"/>', 16px, 16px, rgba(black, 0.6), center right);
    width: 100%;
  }

  input[type="checkbox"] {
    @include appearance-toggle;
    width: 16px;
    height: 16px;

    &:after {
      @include background-svg('<path d="M7 11.75c-.198 0-.389-.078-.53-.22l-2.5-2.5c-.293-.293-.293-.768 0-1.061s.768-.293 1.061 0l1.865 1.864 3.989-5.761c.234-.339.702-.427 1.043-.19.341.236.426.703.189 1.043l-4.5 6.5c-.126.183-.328.3-.549.32-.023.004-.046.005-.068.005z"/>', 16px, 16px, white, center);
    }
  }

  input[type="range"] {
    appearance: none;
    height: 3px;
    border-radius: 3px;
    background-color: rgba(black, 0.33);

    &::-webkit-slider-thumb {
    	appearance: none;
    	width: 13px;
    	height: 13px;
      border: solid 1px rgba(black, 0.1);
    	border-radius: 13px;
    	background-color: white;
      background-clip: padding-box;
    }

    &:active::-webkit-slider-thumb {
    	background-color: mix(black, white, 15%);
    }
  }

  button {
    @include appearance-button(false);

    &:focus {
      outline: none !important;
    }

    &:before {
      content: '\200c';  // For preserving height
    }

    &.scale-in {
      @include background-svg('<path d="M10.836 10.048c.792-.966 1.268-2.201 1.268-3.548 0-3.094-2.509-5.602-5.605-5.602C3.404.898.895 3.406.895 6.5s2.509 5.603 5.604 5.603c1.347 0 2.582-.475 3.548-1.266L14.6 15.39l.789-.789-4.553-4.553zM6.499 11.06c-2.518 0-4.56-2.042-4.56-4.56s2.042-4.56 4.56-4.56 4.56 2.042 4.56 4.56-2.042 4.56-4.56 4.56"/><path d="M9 6.016H7V3.969H6v2.047H4v1h2v1.953h1V7.016h2z"/>', 16px, 16px, rgba(black, 0.6), center);
    }

    &.scale-out {
      @include background-svg('<path d="M15.389 14.601l-4.553-4.553c.792-.966 1.268-2.201 1.268-3.548 0-3.094-2.509-5.602-5.605-5.602C3.404.898.895 3.406.895 6.5s2.509 5.603 5.604 5.603c1.347 0 2.582-.475 3.548-1.266L14.6 15.39l.789-.789zm-8.89-3.541c-2.518 0-4.56-2.042-4.56-4.56s2.042-4.56 4.56-4.56 4.56 2.042 4.56 4.56-2.042 4.56-4.56 4.56"/><path d="M3.999 6h4.999v1H3.999z"/><path d="M3.999 6h4.999v1H3.999z"/>', 16px, 16px, rgba(black, 0.6), center);
    }

    &.scale-identity {
      @include background-svg('<path d="M15.389 14.601l-4.553-4.553c.792-.966 1.268-2.201 1.268-3.548 0-3.094-2.509-5.602-5.605-5.602C3.404.898.895 3.406.895 6.5s2.509 5.603 5.604 5.603c1.347 0 2.582-.475 3.548-1.266L14.6 15.39l.789-.789zm-8.89-3.541c-2.518 0-4.56-2.042-4.56-4.56s2.042-4.56 4.56-4.56 4.56 2.042 4.56 4.56-2.042 4.56-4.56 4.56"/><path d="M6.021 4s.003.466-.318.639c-.332.18-.682.361-.682.361v1l1-.5V9h1V4h-1z"/>', 16px, 16px, rgba(black, 0.6), center);
    }
  }

  .number {
    display: flex;
    align-items: center;

    &:before {
      content: "\200c";  // For baseline alignment
    }

    input[type="range"] {
      flex-grow: 1;
      flex-shrink: 1;
      margin-right: 1em;
    }

    input[type="number"] {
      flex-basis: 5em;
      flex-grow: 0;
      flex-shrink: 0;
    }
  }

  .scale {
    display: flex;
    align-items: center;

    div:nth-child(1) {
      display: flex;
      flex-basis: 50%;
      flex-grow: 1;
      flex-shrink: 1;
      margin-right: 1em;
    }

    div:nth-child(2) {
      display: flex;
      flex-basis: 50%;
      flex-grow: 1;
      flex-shrink: 1;
    }

    input[type="text"] {
      flex-grow: 1;
      flex-shrink: 1;
      text-align: center;
    }

    button {
      flex-grow: 1;
      flex-shrink: 1;
    }

    button + button {
      margin-left: 0.3em;
    }

    label {
      font-size: smaller;
      font-weight: 500;
      color: rgba(black, 0.5);
      text-align: center;
    }
  }

  .coordinate {
    display: flex;
    align-items: center;

    div:nth-child(1) {
      flex-basis: 50%;
      flex-grow: 1;
      flex-shrink: 1;
      margin-right: 1em;
    }

    div:nth-child(2) {
      flex-basis: 50%;
      flex-grow: 1;
      flex-shrink: 1;
    }

    label {
      font-size: smaller;
      font-weight: 500;
      color: rgba(black, 0.5);
      text-align: center;
    }
  }
}
